memberSearchIndex = [{"p":"vectAddGraph","c":"SPCHelper","l":"centeredHyperCube(GL2, double)","u":"centeredHyperCube(com.jogamp.opengl.GL2,double)"},{"p":"vectAddGraph","c":"SPCHelper","l":"draw(GL2)","u":"draw(com.jogamp.opengl.GL2)"},{"p":"vectAddGraph","c":"SPCHelper","l":"draw6DAnchored(GL2, double[])","u":"draw6DAnchored(com.jogamp.opengl.GL2,double[])"},{"p":"vectAddGraph","c":"SPCHelper","l":"draw6DSPCRelative(GL2, double[])","u":"draw6DSPCRelative(com.jogamp.opengl.GL2,double[])"},{"p":"vectAddGraph","c":"SPCHelper","l":"drawBothInHCs(GL2, double[], ReadCancer, double[], double[], double[], int)","u":"drawBothInHCs(com.jogamp.opengl.GL2,double[],vectAddGraph.ReadCancer,double[],double[],double[],int)"},{"p":"vectAddGraph","c":"SPCHelper","l":"drawBothInRects(GL2, double[], ReadCancer, double[], double[], double[], double[], int)","u":"drawBothInRects(com.jogamp.opengl.GL2,double[],vectAddGraph.ReadCancer,double[],double[],double[],double[],int)"},{"p":"vectAddGraph","c":"SPCHelper","l":"drawHyperCube(GL2, double, double, double)","u":"drawHyperCube(com.jogamp.opengl.GL2,double,double,double)"},{"p":"vectAddGraph","c":"SPCHelper","l":"drawList(GL2, double[], List<double[]>, float, float, float)","u":"drawList(com.jogamp.opengl.GL2,double[],java.util.List,float,float,float)"},{"p":"vectAddGraph","c":"SPCHelper","l":"drawManyCubes(GL2, double[], double[], double[])","u":"drawManyCubes(com.jogamp.opengl.GL2,double[],double[],double[])"},{"p":"vectAddGraph","c":"SPCHelper","l":"drawManyRects(GL2, double[], double[], double[], double[])","u":"drawManyRects(com.jogamp.opengl.GL2,double[],double[],double[],double[])"},{"p":"vectAddGraph","c":"SPCHelper","l":"drawND(GL2, double[], double[], float, float, float)","u":"drawND(com.jogamp.opengl.GL2,double[],double[],float,float,float)"},{"p":"vectAddGraph","c":"SPCHelper","l":"drawNotInHC(GL2, double[], ReadCancer, double[], double[], double[], int, int)","u":"drawNotInHC(com.jogamp.opengl.GL2,double[],vectAddGraph.ReadCancer,double[],double[],double[],int,int)"},{"p":"vectAddGraph","c":"SPCHelper","l":"drawOutOfRects(GL2, double[], ReadCancer, double[], double[], double[], double[], int, int)","u":"drawOutOfRects(com.jogamp.opengl.GL2,double[],vectAddGraph.ReadCancer,double[],double[],double[],double[],int,int)"},{"p":"vectAddGraph","c":"SPCHelper","l":"drawRand(GL2, double[], double)","u":"drawRand(com.jogamp.opengl.GL2,double[],double)"},{"p":"vectAddGraph","c":"SPCHelper","l":"drawRect(GL2, double, double, double, double)","u":"drawRect(com.jogamp.opengl.GL2,double,double,double,double)"},{"p":"vectAddGraph","c":"SPCHelper","l":"drawWithinCenterHC(GL2, double[], List<double[]>, double, float, float, float)","u":"drawWithinCenterHC(com.jogamp.opengl.GL2,double[],java.util.List,double,float,float,float)"},{"p":"vectAddGraph","c":"SPCHelper","l":"inCenterHC(double[], double[], double)","u":"inCenterHC(double[],double[],double)"},{"p":"vectAddGraph","c":"SPCHelper","l":"inHC(double[], double[], double, double, double)","u":"inHC(double[],double[],double,double,double)"},{"p":"vectAddGraph","c":"SPCHelper","l":"inHCGroup(double[], double[], double[], double[], double[])","u":"inHCGroup(double[],double[],double[],double[],double[])"},{"p":"vectAddGraph","c":"SPCHelper","l":"inHRect(double[], double[], double, double, double, double)","u":"inHRect(double[],double[],double,double,double,double)"},{"p":"vectAddGraph","c":"SPCHelper","l":"inRectGroup(double[], double[], double[], double[], double[], double[])","u":"inRectGroup(double[],double[],double[],double[],double[],double[])"},{"p":"vectAddGraph","c":"SPCHelper","l":"realSCP(GL2, double[])","u":"realSCP(com.jogamp.opengl.GL2,double[])"},{"p":"vectAddGraph","c":"SPCHelper","l":"SPCHelper()","u":"%3Cinit%3E()"},{"p":"vectAddGraph","c":"SPCHelper","l":"testDrawInRect(GL2, double[], List<double[]>)","u":"testDrawInRect(com.jogamp.opengl.GL2,double[],java.util.List)"}];updateSearchResults();